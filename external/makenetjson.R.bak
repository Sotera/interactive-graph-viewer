makenetjson<-function(gcomm, filename){
  gcomm=simplify(gcomm, edge.attr.comb=list("sum"), remove.loops=FALSE)
  #V(gcomm)$color='#A020F0'
  V(gcomm)$size=1
  gcommlayout=layout.random(gcomm, dim=2);
  V(gcomm)$x=gcommlayout[,1]
  V(gcomm)$y=gcommlayout[,2]
  nodedf=get.data.frame(gcomm, what="vertices")
  if(is.null(nodedf$name)){
    nodedf$id=as.character(1:vcount(gcomm))
  } else{
    nodedf$id=rownames(nodedf)
  }
  if(!is.null(rownames(nodedf))){
    nodedf$label=as.character(1:vcount(gcomm))
  }
  rownames(nodedf)=NULL;
  if(is.null(nodedf$label)){
    nodedf$label=as.character(1:vcount(gcomm))
  }
  edgedf=get.data.frame(gcomm, what="edges");
  edgeids=vector("character", ecount(gcomm))
  for(i in 1:ecount(gcomm)){edgeids[i]=paste0("e", as.character(i))}
  edgedf2=data.frame(source=as.character(edgedf$from), target=as.character(edgedf$to), weight=edgedf$weight, id=edgeids)
  edges_json=paste0("\"edges\":", jsonlite::toJSON(edgedf2))
  nodes_json=paste0("\"nodes\":", jsonlite::toJSON(nodedf))
  all_json=paste0("{", nodes_json, ",", edges_json, "}")
  sink(file=filename)
  cat(all_json)
  sink()
}